// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}


model User {
  id          String   @id @default(uuid())
  email       String   @unique
  firstName   String
  lastName    String
  todos       Todo[]   @relation("UserTodos")
  habits      Habit[]  @relation("UserHabits")
  pomodoro    Pomodoro[] @relation("UserPomodoro")
  profileImage String?
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String
  createdAt   DateTime @default(now())
  toBeDone    DateTime
  userId      String
  matrix      String
  completed   Boolean  @default(false)
  user        User     @relation("UserTodos", fields: [userId], references: [id])
}

model Habit {
  id Int @id @default(autoincrement())
  userId      String
  title String
  createdAt   DateTime @default(now())
  completed Boolean @default(false)
  lastUpdated DateTime @default(now())
  streak Int
  image String? 
  user User @relation("UserHabits", fields: [userId], references: [id])
}

model Pomodoro {
  id Int @id @default(autoincrement())
  userId String
  createdAt  DateTime @default(now())
  finished DateTime @default(now())
  user User @relation("UserPomodoro", fields: [userId], references: [id])
}